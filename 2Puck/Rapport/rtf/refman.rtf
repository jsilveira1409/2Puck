{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment 2puck  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}2puck}
{\comment Generated by doxygen 1.9.4.}
{\creatim \yr2022\mo5\dy15\hr16\min39\sec35}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt 2puck}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sun May 15 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modules\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HAL_CONF\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b note_struct_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b song} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b audio_processing.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b chconf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b console.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fft.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b game.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b halconf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lightshow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mcuconf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b music.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pathing.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b photo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rng.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Config\par \pard\plain 
{\tc\tcl2 \v Config}
{\xe \v Config}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CHPRINTF_USE_FLOAT}\~ true{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Kernel hooks\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b panic_handler} (const char *reason)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System halt hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_THREAD_EXTRA_FIELDS}\~     /* Add threads custom fields here.*/\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads descriptor structure extension. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_THREAD_INIT_HOOK}(tp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads initialization hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_THREAD_EXIT_HOOK}(tp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads finalization hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_CONTEXT_SWITCH_HOOK}(ntp,  otp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Context switch hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_IDLE_ENTER_HOOK}()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread enter hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_IDLE_LEAVE_HOOK}()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread leave hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_IDLE_LOOP_HOOK}()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle Loop hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_SYSTEM_TICK_HOOK}()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System tick event hook. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_SYSTEM_HALT_HOOK}(reason)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
System timers settings\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_ST_RESOLUTION}\~ 32\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System time counter resolution. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_ST_FREQUENCY}\~ 1000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System tick frequency. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_ST_TIMEDELTA}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time delta constant for the tick-less mode. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Kernel parameters and options\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_TIME_QUANTUM}\~ 20\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Round robin interval. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_MEMCORE_SIZE}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Managed RAM size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_NO_IDLE_THREAD}\~ FALSE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread automatic spawn suppression. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Performance options\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_OPTIMIZE_SPEED}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OS optimization. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Subsystem options\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_TM}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time Measurement APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_REGISTRY}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads registry APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_WAITEXIT}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads synchronization APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_SEMAPHORES}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaphores APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_SEMAPHORES_PRIORITY}\~ FALSE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaphores queuing mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MUTEXES}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutexes APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MUTEXES_RECURSIVE}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables recursive behavior on mutexes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_CONDVARS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conditional Variables APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_CONDVARS_TIMEOUT}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conditional Variables APIs with timeout. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_EVENTS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Events Flags APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_EVENTS_TIMEOUT}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Events Flags APIs with timeout. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MESSAGES}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronous Messages APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MESSAGES_PRIORITY}\~ FALSE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronous Messages queuing mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MAILBOXES}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mailboxes APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_QUEUES}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I/O Queues APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MEMCORE}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Core Memory Manager APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_HEAP}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Heap Allocator APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_MEMPOOLS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory Pools Allocator APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_CFG_USE_DYNAMIC}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamic Threads APIs. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Debug options\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_STATISTICS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, kernel statistics. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_SYSTEM_STATE_CHECK}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, system state check. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_ENABLE_CHECKS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, parameters checks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_ENABLE_ASSERTS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, consistency checks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_ENABLE_TRACE}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, trace buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_ENABLE_STACK_CHECK}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, stack checks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_FILL_THREADS}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, stacks initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH_DBG_THREADS_PROFILING}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, threads profiling. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kernel related settings and hooks. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CH_CFG_CONTEXT_SWITCH_HOOK\:Config}
{\xe \v Config\:CH_CFG_CONTEXT_SWITCH_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_CONTEXT_SWITCH_HOOK( ntp,  otp)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                              \\\par
        {\cf20 /* Context switch code here.*/}                                            \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Context switch hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This hook is invoked just before switching between threads. \par
}}
{\xe \v CH_CFG_IDLE_ENTER_HOOK\:Config}
{\xe \v Config\:CH_CFG_IDLE_ENTER_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_IDLE_ENTER_HOOK()}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{                                         \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread enter hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This hook is invoked within a critical zone, no OS functions should be invoked from here. \par
This macro can be used to activate a power saving mode. \par
}}}}
{\xe \v CH_CFG_IDLE_LEAVE_HOOK\:Config}
{\xe \v Config\:CH_CFG_IDLE_LEAVE_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_IDLE_LEAVE_HOOK()}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{                                         \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread leave hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This hook is invoked within a critical zone, no OS functions should be invoked from here. \par
This macro can be used to deactivate a power saving mode. \par
}}}}
{\xe \v CH_CFG_IDLE_LOOP_HOOK\:Config}
{\xe \v Config\:CH_CFG_IDLE_LOOP_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_IDLE_LOOP_HOOK()}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                                           \\\par
        {\cf20 /* Idle loop code here.*/}                                                 \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle Loop hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This hook is continuously invoked by the idle thread loop. \par
}}
{\xe \v CH_CFG_MEMCORE_SIZE\:Config}
{\xe \v Config\:CH_CFG_MEMCORE_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_MEMCORE_SIZE\~ 0}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Managed RAM size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the RAM area to be managed by the OS. If set to zero then the whole available RAM is used. The core memory is made available to the heap allocator and/or can be used directly through the simplified core memory allocator.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
In order to let the OS manage the whole RAM the linker script must provide the {\f2 __heap_base__}  and {\f2 __heap_end__}  symbols. \par
Requires {\f2 CH_CFG_USE_MEMCORE} . \par
}}}}
{\xe \v CH_CFG_NO_IDLE_THREAD\:Config}
{\xe \v Config\:CH_CFG_NO_IDLE_THREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_NO_IDLE_THREAD\~ FALSE}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle thread automatic spawn suppression. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When this option is activated the function {\f2 chSysInit()}  does not spawn the idle thread. The application {\f2 main()}  function becomes the idle thread and must implement an infinite loop. \par
}}
{\xe \v CH_CFG_OPTIMIZE_SPEED\:Config}
{\xe \v Config\:CH_CFG_OPTIMIZE_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_OPTIMIZE_SPEED\~ TRUE}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OS optimization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then time efficient rather than space efficient code is used when two possible implementations exist.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This is not related to the compiler optimization options. \par
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_ST_FREQUENCY\:Config}
{\xe \v Config\:CH_CFG_ST_FREQUENCY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_ST_FREQUENCY\~ 1000}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System tick frequency. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency of the system timer that drives the system ticks. This setting also defines the system tick time unit. \par
}}
{\xe \v CH_CFG_ST_RESOLUTION\:Config}
{\xe \v Config\:CH_CFG_ST_RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_ST_RESOLUTION\~ 32}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System time counter resolution. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Allowed values are 16 or 32 bits. \par
}}}}
{\xe \v CH_CFG_ST_TIMEDELTA\:Config}
{\xe \v Config\:CH_CFG_ST_TIMEDELTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_ST_TIMEDELTA\~ 0}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time delta constant for the tick-less mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
If this value is zero then the system uses the classic periodic tick. This value represents the minimum number of ticks that is safe to specify in a timeout directive. The value one is not valid, timeouts are rounded up to this value. \par
}}}}
{\xe \v CH_CFG_SYSTEM_HALT_HOOK\:Config}
{\xe \v Config\:CH_CFG_SYSTEM_HALT_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_SYSTEM_HALT_HOOK( reason)}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                                   \\\par
        {\cf20 /* System halt code here.*/}                                               \\\par
        panic_handler(reason);                                                    \\\par
\}\par
}
}
{\xe \v CH_CFG_SYSTEM_TICK_HOOK\:Config}
{\xe \v Config\:CH_CFG_SYSTEM_TICK_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_SYSTEM_TICK_HOOK()}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                                         \\\par
        {\cf20 /* System tick event code here.*/}                                         \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System tick event hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This hook is invoked in the system tick handler immediately after processing the virtual timers queue. \par
}}
{\xe \v CH_CFG_THREAD_EXIT_HOOK\:Config}
{\xe \v Config\:CH_CFG_THREAD_EXIT_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_THREAD_EXIT_HOOK( tp)}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                                       \\\par
        {\cf20 /* Add threads finalization code here.*/}                                  \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads finalization hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User finalization code added to the {\f2 chThdExit()}  API.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
It is inserted into lock zone. \par
It is also invoked when the threads simply return in order to terminate. \par
}}}}
{\xe \v CH_CFG_THREAD_EXTRA_FIELDS\:Config}
{\xe \v Config\:CH_CFG_THREAD_EXTRA_FIELDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_THREAD_EXTRA_FIELDS\~     /* Add threads custom fields here.*/}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads descriptor structure extension. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User fields added to the end of the {\f2 thread_t}  structure. \par
}}
{\xe \v CH_CFG_THREAD_INIT_HOOK\:Config}
{\xe \v Config\:CH_CFG_THREAD_INIT_HOOK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_THREAD_INIT_HOOK( tp)}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{                                       \\\par
        {\cf20 /* Add threads initialization code here.*/}                                \\\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads initialization hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User initialization code added to the {\f2 chThdInit()}  API.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
It is invoked from within {\f2 chThdInit()}  and implicitly from all the threads creation APIs. \par
}}}}
{\xe \v CH_CFG_TIME_QUANTUM\:Config}
{\xe \v Config\:CH_CFG_TIME_QUANTUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_TIME_QUANTUM\~ 20}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Round robin interval. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This constant is the number of system ticks allowed for the threads before preemption occurs. Setting this value to zero disables the preemption for threads with equal priority and the round robin becomes cooperative. Note that higher priority threads can still preempt, the kernel is always preemptive. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disabling the round robin preemption makes the kernel more compact and generally faster. \par
The round robin preemption is not supported in tickless mode and must be set to zero in that case. \par
}}}}
{\xe \v CH_CFG_USE_CONDVARS\:Config}
{\xe \v Config\:CH_CFG_USE_CONDVARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_CONDVARS\~ TRUE}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conditional Variables APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the conditional variables APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_MUTEXES} . \par
}}}}
{\xe \v CH_CFG_USE_CONDVARS_TIMEOUT\:Config}
{\xe \v Config\:CH_CFG_USE_CONDVARS_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_CONDVARS_TIMEOUT\~ TRUE}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conditional Variables APIs with timeout. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the conditional variables APIs with timeout specification are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_CONDVARS} . \par
}}}}
{\xe \v CH_CFG_USE_DYNAMIC\:Config}
{\xe \v Config\:CH_CFG_USE_DYNAMIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_DYNAMIC\~ TRUE}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamic Threads APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the dynamic threads creation APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_WAITEXIT} . \par
Requires {\f2 CH_CFG_USE_HEAP}  and/or {\f2 CH_CFG_USE_MEMPOOLS} . \par
}}}}
{\xe \v CH_CFG_USE_EVENTS\:Config}
{\xe \v Config\:CH_CFG_USE_EVENTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_EVENTS\~ TRUE}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Events Flags APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the event flags APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_EVENTS_TIMEOUT\:Config}
{\xe \v Config\:CH_CFG_USE_EVENTS_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_EVENTS_TIMEOUT\~ TRUE}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Events Flags APIs with timeout. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the events APIs with timeout specification are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_EVENTS} . \par
}}}}
{\xe \v CH_CFG_USE_HEAP\:Config}
{\xe \v Config\:CH_CFG_USE_HEAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_HEAP\~ TRUE}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Heap Allocator APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the memory heap allocator APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_MEMCORE}  and either {\f2 CH_CFG_USE_MUTEXES}  or {\f2 CH_CFG_USE_SEMAPHORES} . \par
Mutexes are recommended. \par
}}}}
{\xe \v CH_CFG_USE_MAILBOXES\:Config}
{\xe \v Config\:CH_CFG_USE_MAILBOXES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MAILBOXES\~ TRUE}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mailboxes APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the asynchronous messages (mailboxes) APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
Requires {\f2 CH_CFG_USE_SEMAPHORES} . \par
}}}}
{\xe \v CH_CFG_USE_MEMCORE\:Config}
{\xe \v Config\:CH_CFG_USE_MEMCORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MEMCORE\~ TRUE}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Core Memory Manager APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the core memory manager APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_MEMPOOLS\:Config}
{\xe \v Config\:CH_CFG_USE_MEMPOOLS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MEMPOOLS\~ TRUE}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory Pools Allocator APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the memory pools allocator APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_MESSAGES\:Config}
{\xe \v Config\:CH_CFG_USE_MESSAGES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MESSAGES\~ TRUE}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronous Messages APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the synchronous messages APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_MESSAGES_PRIORITY\:Config}
{\xe \v Config\:CH_CFG_USE_MESSAGES_PRIORITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MESSAGES_PRIORITY\~ FALSE}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Synchronous Messages queuing mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then messages are served by priority rather than in FIFO order.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . Enable this if you have special requirements. \par
Requires {\f2 CH_CFG_USE_MESSAGES} . \par
}}}}
{\xe \v CH_CFG_USE_MUTEXES\:Config}
{\xe \v Config\:CH_CFG_USE_MUTEXES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MUTEXES\~ TRUE}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mutexes APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the mutexes APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_MUTEXES_RECURSIVE\:Config}
{\xe \v Config\:CH_CFG_USE_MUTEXES_RECURSIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_MUTEXES_RECURSIVE\~ TRUE}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables recursive behavior on mutexes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Recursive mutexes are heavier and have an increased memory footprint.\par
The default is {\f2 FALSE} . \par
Requires {\f2 CH_CFG_USE_MUTEXES} . \par
}}}}
{\xe \v CH_CFG_USE_QUEUES\:Config}
{\xe \v Config\:CH_CFG_USE_QUEUES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_QUEUES\~ TRUE}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I/O Queues APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the I/O queues APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_REGISTRY\:Config}
{\xe \v Config\:CH_CFG_USE_REGISTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_REGISTRY\~ TRUE}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads registry APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the registry APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_SEMAPHORES\:Config}
{\xe \v Config\:CH_CFG_USE_SEMAPHORES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_SEMAPHORES\~ TRUE}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaphores APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the Semaphores APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_SEMAPHORES_PRIORITY\:Config}
{\xe \v Config\:CH_CFG_USE_SEMAPHORES_PRIORITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_SEMAPHORES_PRIORITY\~ FALSE}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaphores queuing mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the threads are enqueued on semaphores by priority rather than in FIFO order.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . Enable this if you have special requirements. \par
Requires {\f2 CH_CFG_USE_SEMAPHORES} . \par
}}}}
{\xe \v CH_CFG_USE_TM\:Config}
{\xe \v Config\:CH_CFG_USE_TM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_TM\~ TRUE}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time Measurement APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the time measurement APIs are included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_CFG_USE_WAITEXIT\:Config}
{\xe \v Config\:CH_CFG_USE_WAITEXIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_CFG_USE_WAITEXIT\~ TRUE}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Threads synchronization APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the {\f2 chThdWait()}  function is included in the kernel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 TRUE} . \par
}}}}
{\xe \v CH_DBG_ENABLE_ASSERTS\:Config}
{\xe \v Config\:CH_DBG_ENABLE_ASSERTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_ENABLE_ASSERTS\~ TRUE}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, consistency checks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then all the assertions in the kernel code are activated. This includes consistency checks inside the kernel, runtime anomalies and port-defined checks.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_ENABLE_CHECKS\:Config}
{\xe \v Config\:CH_DBG_ENABLE_CHECKS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_ENABLE_CHECKS\~ TRUE}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, parameters checks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the checks on the API functions input parameters are activated.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_ENABLE_STACK_CHECK\:Config}
{\xe \v Config\:CH_DBG_ENABLE_STACK_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_ENABLE_STACK_CHECK\~ TRUE}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, stack checks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then a runtime stack check is performed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
The stack check is performed in a architecture/port dependent way. It may not be implemented or some ports. \par
The default failure mode is to halt the system with the global {\f2 panic_msg}  variable set to {\f2 NULL} . \par
}}}}
{\xe \v CH_DBG_ENABLE_TRACE\:Config}
{\xe \v Config\:CH_DBG_ENABLE_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_ENABLE_TRACE\~ TRUE}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, trace buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the context switch circular trace buffer is activated.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_FILL_THREADS\:Config}
{\xe \v Config\:CH_DBG_FILL_THREADS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_FILL_THREADS\~ TRUE}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, stacks initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then the threads working area is filled with a byte value when a thread is created. This can be useful for the runtime measurement of the used stack.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_STATISTICS\:Config}
{\xe \v Config\:CH_DBG_STATISTICS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_STATISTICS\~ TRUE}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, kernel statistics. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_SYSTEM_STATE_CHECK\:Config}
{\xe \v Config\:CH_DBG_SYSTEM_STATE_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_SYSTEM_STATE_CHECK\~ TRUE}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, system state check. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled the correct call protocol for system APIs is checked at runtime.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
}}}}
{\xe \v CH_DBG_THREADS_PROFILING\:Config}
{\xe \v Config\:CH_DBG_THREADS_PROFILING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH_DBG_THREADS_PROFILING\~ TRUE}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Debug option, threads profiling. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled then a field is added to the {\f2 thread_t}  structure that counts the system ticks occurred while executing the thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is {\f2 FALSE} . \par
This debug option is not currently compatible with the tickless mode. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v panic_handler\:Config}
{\xe \v Config\:panic_handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void panic_handler (const char *  {\i reason})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System halt hook. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This hook is invoked in case to a system halting error before the system is halted. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HAL_CONF\par \pard\plain 
{\tc\tcl2 \v HAL_CONF}
{\xe \v HAL_CONF}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_PAL}\~ TRUE{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the PAL subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_ADC}\~ TRUE{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the ADC subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_CAN}\~ TRUE{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the CAN subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HAL_USE_DAC}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the DAC subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_DCMI}\~ TRUE{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the DCMI subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_EXT}\~ TRUE{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the EXT subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_GPT}\~ TRUE{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the GPT subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_I2C}\~ TRUE{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the I2C subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_I2S}\~ TRUE{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the I2S subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_ICU}\~ FALSE{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the ICU subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_MAC}\~ FALSE{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the MAC subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_MMC_SPI}\~ FALSE{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the MMC_SPI subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_PWM}\~ TRUE{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the PWM subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_RTC}\~ FALSE{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the RTC subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_SDC}\~ TRUE{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the SDC subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_SERIAL}\~ TRUE{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the SERIAL subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_SERIAL_USB}\~ TRUE{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the SERIAL over USB subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_SPI}\~ TRUE{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the SPI subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_UART}\~ FALSE{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the UART subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b HAL_USE_USB}\~ TRUE{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the USB subsystem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADC_USE_WAIT}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables synchronous APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADC_USE_MUTUAL_EXCLUSION}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the {\f2 adcAcquireBus()}  and {\f2 adcReleaseBus()}  APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b CAN_USE_SLEEP_MODE}\~ TRUE{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sleep mode related APIs inclusion switch. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b I2C_USE_MUTUAL_EXCLUSION}\~ TRUE{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the mutual exclusion APIs on the I2C bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MAC_USE_ZERO_COPY}\~ FALSE{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables an event sources for incoming packets. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b MAC_USE_EVENTS}\~ TRUE{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables an event sources for incoming packets. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MMC_NICE_WAITING}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delays insertions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SDC_INIT_RETRY}\~ 100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of initialization attempts before rejecting the card. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SDC_MMC_SUPPORT}\~ FALSE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include support for MMC cards. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SDC_NICE_WAITING}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delays insertions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_DEFAULT_BITRATE}\~ 115200\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default bit rate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_BUFFERS_SIZE}\~ 16\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial buffers size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_USB_BUFFERS_SIZE}\~ 256\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial over USB buffers size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPI_USE_WAIT}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables synchronous APIs. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPI_USE_MUTUAL_EXCLUSION}\~ TRUE\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the {\f2 spiAcquireBus()}  and {\f2 spiReleaseBus()}  APIs. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADC_USE_MUTUAL_EXCLUSION\:HAL_CONF}
{\xe \v HAL_CONF\:ADC_USE_MUTUAL_EXCLUSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADC_USE_MUTUAL_EXCLUSION\~ TRUE}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the {\f2 adcAcquireBus()}  and {\f2 adcReleaseBus()}  APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disabling this option saves both code and data space. \par
}}}}
{\xe \v ADC_USE_WAIT\:HAL_CONF}
{\xe \v HAL_CONF\:ADC_USE_WAIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADC_USE_WAIT\~ TRUE}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables synchronous APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disabling this option saves both code and data space. \par
}}}}
{\xe \v HAL_USE_DAC\:HAL_CONF}
{\xe \v HAL_CONF\:HAL_USE_DAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HAL_USE_DAC\~ TRUE}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the DAC subsystem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
*+ \par}
}}
{\xe \v MMC_NICE_WAITING\:HAL_CONF}
{\xe \v HAL_CONF\:MMC_NICE_WAITING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MMC_NICE_WAITING\~ TRUE}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delays insertions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled this options inserts delays into the MMC waiting routines releasing some extra CPU time for the threads with lower priority, this may slow down the driver a bit however. This option is recommended also if the SPI driver does not use a DMA channel and heavily loads the CPU. \par
}}
{\xe \v SDC_INIT_RETRY\:HAL_CONF}
{\xe \v HAL_CONF\:SDC_INIT_RETRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SDC_INIT_RETRY\~ 100}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of initialization attempts before rejecting the card. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Attempts are performed at 10mS intervals. \par
}}}}
{\xe \v SDC_MMC_SUPPORT\:HAL_CONF}
{\xe \v HAL_CONF\:SDC_MMC_SUPPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SDC_MMC_SUPPORT\~ FALSE}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include support for MMC cards. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
MMC support is not yet implemented so this option must be kept at {\f2 FALSE} . \par
}}}}
{\xe \v SDC_NICE_WAITING\:HAL_CONF}
{\xe \v HAL_CONF\:SDC_NICE_WAITING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SDC_NICE_WAITING\~ TRUE}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delays insertions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If enabled this options inserts delays into the MMC waiting routines releasing some extra CPU time for the threads with lower priority, this may slow down the driver a bit however. \par
}}
{\xe \v SERIAL_BUFFERS_SIZE\:HAL_CONF}
{\xe \v HAL_CONF\:SERIAL_BUFFERS_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_BUFFERS_SIZE\~ 16}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial buffers size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration parameter, you can change the depth of the queue buffers depending on the requirements of your application. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is 64 bytes for both the transmission and receive buffers. \par
}}}}
{\xe \v SERIAL_DEFAULT_BITRATE\:HAL_CONF}
{\xe \v HAL_CONF\:SERIAL_DEFAULT_BITRATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_DEFAULT_BITRATE\~ 115200}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default bit rate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration parameter, this is the baud rate selected for the default configuration. \par
}}
{\xe \v SERIAL_USB_BUFFERS_SIZE\:HAL_CONF}
{\xe \v HAL_CONF\:SERIAL_USB_BUFFERS_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_USB_BUFFERS_SIZE\~ 256}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial over USB buffers size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration parameter, the buffer size must be a multiple of the USB data endpoint maximum packet size. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The default is 64 bytes for both the transmission and receive buffers. \par
}}}}
{\xe \v SPI_USE_MUTUAL_EXCLUSION\:HAL_CONF}
{\xe \v HAL_CONF\:SPI_USE_MUTUAL_EXCLUSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPI_USE_MUTUAL_EXCLUSION\~ TRUE}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the {\f2 spiAcquireBus()}  and {\f2 spiReleaseBus()}  APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disabling this option saves both code and data space. \par
}}}}
{\xe \v SPI_USE_WAIT\:HAL_CONF}
{\xe \v HAL_CONF\:SPI_USE_WAIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPI_USE_WAIT\~ TRUE}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables synchronous APIs. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disabling this option saves both code and data space. \par
}}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
note_struct_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v note_struct_t}
{\xe \v note_struct_t}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint16_t {\b freq}{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
music.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
song Struct Reference\par \pard\plain 
{\tc\tcl2 \v song}
{\xe \v song}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint8_t * {\b melody_ptr}{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const uint16_t {\b melody_size}{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b file_name}{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
music.c\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
audio_processing.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        audio_processing.c}\par
3 {\cf20  * @brief       Microphone sample processing library.}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @author      Joaquim Silveira}\par
6 {\cf20  * @version     1.0}\par
7 {\cf20  * @date        12 Apr 2022}\par
8 {\cf20  * @copyright   GNU Public License}\par
9 {\cf20  *}\par
10 {\cf20  */}\par
11 \par
12 {\cf21 #ifndef AUDIO_PROCESSING_H}\par
13 {\cf21 #define AUDIO_PROCESSING_H}\par
14 \par
15 \par
16 {\cf18 void} wait_note_played({\cf18 void});\par
17 {\cf18 void} wait_finish_playing({\cf18 void});\par
18 {\cf18 void} processAudioDataCmplx(int16_t *data, uint16_t num_samples);\par
19 \par
20 \par
21 {\cf21 #endif }{\cf20 /* AUDIO_PROCESSING_H */}{\cf21 }\par
22 \par
23 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
chconf.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     ChibiOS - Copyright (C) 2006..2015 Giovanni Di Sirio}\par
3 {\cf20 }\par
4 {\cf20     Licensed under the Apache License, Version 2.0 (the "License");}\par
5 {\cf20     you may not use this file except in compliance with the License.}\par
6 {\cf20     You may obtain a copy of the License at}\par
7 {\cf20 }\par
8 {\cf20         http://www.apache.org/licenses/LICENSE-2.0}\par
9 {\cf20 }\par
10 {\cf20     Unless required by applicable law or agreed to in writing, software}\par
11 {\cf20     distributed under the License is distributed on an "AS IS" BASIS,}\par
12 {\cf20     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.}\par
13 {\cf20     See the License for the specific language governing permissions and}\par
14 {\cf20     limitations under the License.}\par
15 {\cf20  */}\par
16 \par
28 {\cf21 #ifndef _CHCONF_H_}\par
29 {\cf21 #define _CHCONF_H_}\par
30 \par
31 {\cf20 /*===========================================================================*/}\par
36 {\cf20 /*===========================================================================*/}\par
37 \par
42 {\cf21 #define CH_CFG_ST_RESOLUTION                32}\par
43 \par
49 {\cf21 #define CH_CFG_ST_FREQUENCY                 1000}\par
50 \par
59 {\cf21 #define CH_CFG_ST_TIMEDELTA                 0}\par
60 \par
63 {\cf20 /*===========================================================================*/}\par
68 {\cf20 /*===========================================================================*/}\par
69 \par
82 {\cf21 #define CH_CFG_TIME_QUANTUM                 20}\par
83 \par
95 {\cf21 #define CH_CFG_MEMCORE_SIZE                 0}\par
96 \par
103 {\cf21 #define CH_CFG_NO_IDLE_THREAD               FALSE}\par
104 \par
107 {\cf20 /*===========================================================================*/}\par
112 {\cf20 /*===========================================================================*/}\par
113 \par
122 {\cf21 #define CH_CFG_OPTIMIZE_SPEED               TRUE}\par
123 \par
126 {\cf20 /*===========================================================================*/}\par
131 {\cf20 /*===========================================================================*/}\par
132 \par
140 {\cf21 #define CH_CFG_USE_TM                       TRUE}\par
141 \par
148 {\cf21 #define CH_CFG_USE_REGISTRY                 TRUE}\par
149 \par
157 {\cf21 #define CH_CFG_USE_WAITEXIT                 TRUE}\par
158 \par
165 {\cf21 #define CH_CFG_USE_SEMAPHORES               TRUE}\par
166 \par
176 {\cf21 #define CH_CFG_USE_SEMAPHORES_PRIORITY      FALSE}\par
177 \par
184 {\cf21 #define CH_CFG_USE_MUTEXES                  TRUE}\par
185 \par
194 {\cf21 #define CH_CFG_USE_MUTEXES_RECURSIVE        TRUE}\par
195 \par
204 {\cf21 #define CH_CFG_USE_CONDVARS                 TRUE}\par
205 \par
214 {\cf21 #define CH_CFG_USE_CONDVARS_TIMEOUT         TRUE}\par
215 \par
222 {\cf21 #define CH_CFG_USE_EVENTS                   TRUE}\par
223 \par
232 {\cf21 #define CH_CFG_USE_EVENTS_TIMEOUT           TRUE}\par
233 \par
241 {\cf21 #define CH_CFG_USE_MESSAGES                 TRUE}\par
242 \par
252 {\cf21 #define CH_CFG_USE_MESSAGES_PRIORITY        FALSE}\par
253 \par
262 {\cf21 #define CH_CFG_USE_MAILBOXES                TRUE}\par
263 \par
270 {\cf21 #define CH_CFG_USE_QUEUES                   TRUE}\par
271 \par
279 {\cf21 #define CH_CFG_USE_MEMCORE                  TRUE}\par
280 \par
291 {\cf21 #define CH_CFG_USE_HEAP                     TRUE}\par
292 \par
300 {\cf21 #define CH_CFG_USE_MEMPOOLS                 TRUE}\par
301 \par
311 {\cf21 #define CH_CFG_USE_DYNAMIC                  TRUE}\par
312 \par
315 {\cf20 /*===========================================================================*/}\par
320 {\cf20 /*===========================================================================*/}\par
321 \par
327 {\cf21 #define CH_DBG_STATISTICS                   TRUE}\par
328 \par
336 {\cf21 #define CH_DBG_SYSTEM_STATE_CHECK           TRUE}\par
337 \par
345 {\cf21 #define CH_DBG_ENABLE_CHECKS                TRUE}\par
346 \par
355 {\cf21 #define CH_DBG_ENABLE_ASSERTS               TRUE}\par
356 \par
364 {\cf21 #define CH_DBG_ENABLE_TRACE                 TRUE}\par
365 \par
376 {\cf21 #define CH_DBG_ENABLE_STACK_CHECK           TRUE}\par
377 \par
386 {\cf21 #define CH_DBG_FILL_THREADS                 TRUE}\par
387 \par
397 {\cf21 #define CH_DBG_THREADS_PROFILING            TRUE}\par
398 \par
401 {\cf20 /*===========================================================================*/}\par
406 {\cf20 /*===========================================================================*/}\par
407 \par
412 {\cf21 #define CH_CFG_THREAD_EXTRA_FIELDS                                          \\}\par
413 {\cf21     }{\cf20 /* Add threads custom fields here.*/}{\cf21 }\par
414 \par
422 {\cf21 #define CH_CFG_THREAD_INIT_HOOK(tp) \{                                       \\}\par
423 {\cf21         }{\cf20 /* Add threads initialization code here.*/}{\cf21                                 \\}\par
424 {\cf21 \}}\par
425 \par
434 {\cf21 #define CH_CFG_THREAD_EXIT_HOOK(tp) \{                                       \\}\par
435 {\cf21         }{\cf20 /* Add threads finalization code here.*/}{\cf21                                   \\}\par
436 {\cf21 \}}\par
437 \par
442 {\cf21 #define CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp) \{                              \\}\par
443 {\cf21         }{\cf20 /* Context switch code here.*/}{\cf21                                             \\}\par
444 {\cf21 \}}\par
445 \par
452 {\cf21 #define CH_CFG_IDLE_ENTER_HOOK() \{                                         \\}\par
453 {\cf21 \}}\par
454 \par
461 {\cf21 #define CH_CFG_IDLE_LEAVE_HOOK() \{                                         \\}\par
462 {\cf21 \}}\par
463 \par
468 {\cf21 #define CH_CFG_IDLE_LOOP_HOOK() \{                                           \\}\par
469 {\cf21         }{\cf20 /* Idle loop code here.*/}{\cf21                                                  \\}\par
470 {\cf21 \}}\par
471 \par
477 {\cf21 #define CH_CFG_SYSTEM_TICK_HOOK() \{                                         \\}\par
478 {\cf21         }{\cf20 /* System tick event code here.*/}{\cf21                                          \\}\par
479 {\cf21 \}}\par
480 \par
486 {\cf21 #if !defined(_FROM_ASM_)}\par
487 {\cf21 #ifdef __cplusplus}\par
488 {\cf17 extern} {\cf22 "C"} \{\par
489 {\cf21 #endif}\par
490 {\cf18 void} panic_handler({\cf17 const} {\cf18 char} *reason);\par
491 {\cf21 #ifdef __cplusplus}\par
492 \}\par
493 {\cf21 #endif}\par
494 {\cf21 #endif }{\cf20 /* _FROM_ASM_ */}{\cf21 }\par
495 {\cf21 #define CH_CFG_SYSTEM_HALT_HOOK(reason) \{                                   \\}\par
496 {\cf21         }{\cf20 /* System halt code here.*/}{\cf21                                                \\}\par
497 {\cf21         panic_handler(reason);                                                    \\}\par
498 {\cf21 \}}\par
499 \par
500 \par
503 {\cf20 /*===========================================================================*/}\par
504 {\cf20 /* Port-specific settings (override port settings defaulted in chcore.h).    */}\par
505 {\cf20 /*===========================================================================*/}\par
506 \par
507 {\cf20 // chprintf float enable}\par
508 {\cf21 #define CHPRINTF_USE_FLOAT true}\par
509 \par
510 {\cf21 #endif  }{\cf20 /* _CHCONF_H_ */}{\cf21 }\par
511 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
console.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        console.h}\par
3 {\cf20  * @brief       Communication with serial monitor}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @author      Joaquim Silveira}\par
6 {\cf20  * @version     1.0}\par
7 {\cf20  * @date        7 May 2022}\par
8 {\cf20  * @copyright   GNU Public License}\par
9 {\cf20  *}\par
10 {\cf20  */}\par
11 \par
12 {\cf21 #ifndef CONSOLE_H_}\par
13 {\cf21 #define CONSOLE_H_}\par
14 \par
15 {\cf18 void} console_init({\cf18 void});\par
16 msg_t console_stop({\cf18 void});\par
17 msg_t console_send_string({\cf17 const} {\cf18 char}* msg);\par
18 msg_t console_send_int({\cf18 int} num, {\cf18 char}* msg);\par
19 {\cf18 char} console_get_char({\cf18 char}* input_msg);\par
20 {\cf18 void} SendUint8ToComputer(uint8_t* data, uint16_t size);\par
21 \par
22 {\cf21 #endif }{\cf20 /* CONSOLE_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fft.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        fft.h}\par
3 {\cf20  * @brief       FFT wrapping functions.}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @author      Joaquim Silveira}\par
6 {\cf20  * @version     1.0}\par
7 {\cf20  * @date        12 Apr 2022}\par
8 {\cf20  * @copyright   GNU Public License}\par
9 {\cf20  *}\par
10 {\cf20  */}\par
11 {\cf21 #ifndef FFT_H}\par
12 {\cf21 #define FFT_H}\par
13 {\cf21 #include "arm_math.h"}\par
14 \par
15 {\cf18 void} init_rfft_handler(uint16_t fft_size);\par
16 {\cf18 void} doCmplxFFT_optimized(uint16_t size, {\cf18 float}* complex_buffer);\par
17 \par
18 {\cf21 #endif }{\cf20 /* FFT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
game.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        game.h}\par
3 {\cf20  * @brief       Main FSM controlling the game logic.}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @version     1.0}\par
6 {\cf20  * @date        29 Apr 2022}\par
7 {\cf20  * @copyright   GNU Public License}\par
8 {\cf20  *}\par
9 {\cf20  */}\par
10 {\cf21 #ifndef GAME_H_}\par
11 {\cf21 #define GAME_H_}\par
12 \par
13 \par
14 {\cf18 void} game_init({\cf18 void});\par
15 msg_t game_send_score({\cf18 float} score);\par
16 \par
17 \par
18 {\cf21 #endif }{\cf20 /* GAME_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
halconf.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     ChibiOS - Copyright (C) 2006..2015 Giovanni Di Sirio}\par
3 {\cf20 }\par
4 {\cf20     Licensed under the Apache License, Version 2.0 (the "License");}\par
5 {\cf20     you may not use this file except in compliance with the License.}\par
6 {\cf20     You may obtain a copy of the License at}\par
7 {\cf20 }\par
8 {\cf20         http://www.apache.org/licenses/LICENSE-2.0}\par
9 {\cf20 }\par
10 {\cf20     Unless required by applicable law or agreed to in writing, software}\par
11 {\cf20     distributed under the License is distributed on an "AS IS" BASIS,}\par
12 {\cf20     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.}\par
13 {\cf20     See the License for the specific language governing permissions and}\par
14 {\cf20     limitations under the License.}\par
15 {\cf20  */}\par
16 \par
28 {\cf21 #ifndef _HALCONF_H_}\par
29 {\cf21 #define _HALCONF_H_}\par
30 \par
31 {\cf21 #include "mcuconf.h"}\par
32 \par
36 {\cf21 #if !defined(HAL_USE_PAL) || defined(__DOXYGEN__)}\par
37 {\cf21 #define HAL_USE_PAL                 TRUE}\par
38 {\cf21 #endif}\par
39 \par
43 {\cf21 #if !defined(HAL_USE_ADC) || defined(__DOXYGEN__)}\par
44 {\cf21 #define HAL_USE_ADC                 TRUE}\par
45 {\cf21 #endif}\par
46 \par
50 {\cf21 #if !defined(HAL_USE_CAN) || defined(__DOXYGEN__)}\par
51 {\cf21 #define HAL_USE_CAN                 TRUE}\par
52 {\cf21 #endif}\par
53 \par
57 {\cf21 #if !defined(HAL_USE_DAC) || defined(__DOXYGEN__)}\par
58 {\cf21 #define HAL_USE_DAC                 TRUE}\par
59 {\cf21 #endif}\par
60 \par
64 {\cf21 #if !defined(HAL_USE_DCMI) || defined(__DOXYGEN__)}\par
65 {\cf21 #define HAL_USE_DCMI                 TRUE}\par
66 {\cf21 #endif}\par
67 \par
71 {\cf21 #if !defined(HAL_USE_EXT) || defined(__DOXYGEN__)}\par
72 {\cf21 #define HAL_USE_EXT                 TRUE}\par
73 {\cf21 #endif}\par
74 \par
78 {\cf21 #if !defined(HAL_USE_GPT) || defined(__DOXYGEN__)}\par
79 {\cf21 #define HAL_USE_GPT                 TRUE}\par
80 {\cf21 #endif}\par
81 \par
85 {\cf21 #if !defined(HAL_USE_I2C) || defined(__DOXYGEN__)}\par
86 {\cf21 #define HAL_USE_I2C                 TRUE}\par
87 {\cf21 #endif}\par
88 \par
92 {\cf21 #if !defined(HAL_USE_I2S) || defined(__DOXYGEN__)}\par
93 {\cf21 #define HAL_USE_I2S                 TRUE}\par
94 {\cf21 #endif}\par
95 \par
99 {\cf21 #if !defined(HAL_USE_ICU) || defined(__DOXYGEN__)}\par
100 {\cf21 #define HAL_USE_ICU                 FALSE}\par
101 {\cf21 #endif}\par
102 \par
106 {\cf21 #if !defined(HAL_USE_MAC) || defined(__DOXYGEN__)}\par
107 {\cf21 #define HAL_USE_MAC                 FALSE}\par
108 {\cf21 #endif}\par
109 \par
113 {\cf21 #if !defined(HAL_USE_MMC_SPI) || defined(__DOXYGEN__)}\par
114 {\cf21 #define HAL_USE_MMC_SPI             FALSE}\par
115 {\cf21 #endif}\par
116 \par
120 {\cf21 #if !defined(HAL_USE_PWM) || defined(__DOXYGEN__)}\par
121 {\cf21 #define HAL_USE_PWM                 TRUE}\par
122 {\cf21 #endif}\par
123 \par
127 {\cf21 #if !defined(HAL_USE_RTC) || defined(__DOXYGEN__)}\par
128 {\cf21 #define HAL_USE_RTC                 FALSE}\par
129 {\cf21 #endif}\par
130 \par
134 {\cf21 #if !defined(HAL_USE_SDC) || defined(__DOXYGEN__)}\par
135 {\cf21 #define HAL_USE_SDC                 TRUE}\par
136 {\cf21 #endif}\par
137 \par
141 {\cf21 #if !defined(HAL_USE_SERIAL) || defined(__DOXYGEN__)}\par
142 {\cf21 #define HAL_USE_SERIAL              TRUE}\par
143 {\cf21 #endif}\par
144 \par
148 {\cf21 #if !defined(HAL_USE_SERIAL_USB) || defined(__DOXYGEN__)}\par
149 {\cf21 #define HAL_USE_SERIAL_USB          TRUE}\par
150 {\cf21 #endif}\par
151 \par
155 {\cf21 #if !defined(HAL_USE_SPI) || defined(__DOXYGEN__)}\par
156 {\cf21 #define HAL_USE_SPI                 TRUE}\par
157 {\cf21 #endif}\par
158 \par
162 {\cf21 #if !defined(HAL_USE_UART) || defined(__DOXYGEN__)}\par
163 {\cf21 #define HAL_USE_UART                FALSE}\par
164 {\cf21 #endif}\par
165 \par
169 {\cf21 #if !defined(HAL_USE_USB) || defined(__DOXYGEN__)}\par
170 {\cf21 #define HAL_USE_USB                 TRUE}\par
171 {\cf21 #endif}\par
172 \par
173 {\cf20 /*===========================================================================*/}\par
174 {\cf20 /* ADC driver related settings.                                              */}\par
175 {\cf20 /*===========================================================================*/}\par
176 \par
181 {\cf21 #if !defined(ADC_USE_WAIT) || defined(__DOXYGEN__)}\par
182 {\cf21 #define ADC_USE_WAIT                TRUE}\par
183 {\cf21 #endif}\par
184 \par
189 {\cf21 #if !defined(ADC_USE_MUTUAL_EXCLUSION) || defined(__DOXYGEN__)}\par
190 {\cf21 #define ADC_USE_MUTUAL_EXCLUSION    TRUE}\par
191 {\cf21 #endif}\par
192 \par
193 {\cf20 /*===========================================================================*/}\par
194 {\cf20 /* CAN driver related settings.                                              */}\par
195 {\cf20 /*===========================================================================*/}\par
196 \par
200 {\cf21 #if !defined(CAN_USE_SLEEP_MODE) || defined(__DOXYGEN__)}\par
201 {\cf21 #define CAN_USE_SLEEP_MODE          TRUE}\par
202 {\cf21 #endif}\par
203 \par
204 {\cf20 /*===========================================================================*/}\par
205 {\cf20 /* I2C driver related settings.                                              */}\par
206 {\cf20 /*===========================================================================*/}\par
207 \par
211 {\cf21 #if !defined(I2C_USE_MUTUAL_EXCLUSION) || defined(__DOXYGEN__)}\par
212 {\cf21 #define I2C_USE_MUTUAL_EXCLUSION    TRUE}\par
213 {\cf21 #endif}\par
214 \par
215 {\cf20 /*===========================================================================*/}\par
216 {\cf20 /* MAC driver related settings.                                              */}\par
217 {\cf20 /*===========================================================================*/}\par
218 \par
222 {\cf21 #if !defined(MAC_USE_ZERO_COPY) || defined(__DOXYGEN__)}\par
223 {\cf21 #define MAC_USE_ZERO_COPY           FALSE}\par
224 {\cf21 #endif}\par
225 \par
229 {\cf21 #if !defined(MAC_USE_EVENTS) || defined(__DOXYGEN__)}\par
230 {\cf21 #define MAC_USE_EVENTS              TRUE}\par
231 {\cf21 #endif}\par
232 \par
233 {\cf20 /*===========================================================================*/}\par
234 {\cf20 /* MMC_SPI driver related settings.                                          */}\par
235 {\cf20 /*===========================================================================*/}\par
236 \par
245 {\cf21 #if !defined(MMC_NICE_WAITING) || defined(__DOXYGEN__)}\par
246 {\cf21 #define MMC_NICE_WAITING            TRUE}\par
247 {\cf21 #endif}\par
248 \par
249 {\cf20 /*===========================================================================*/}\par
250 {\cf20 /* SDC driver related settings.                                              */}\par
251 {\cf20 /*===========================================================================*/}\par
252 \par
257 {\cf21 #if !defined(SDC_INIT_RETRY) || defined(__DOXYGEN__)}\par
258 {\cf21 #define SDC_INIT_RETRY              100}\par
259 {\cf21 #endif}\par
260 \par
266 {\cf21 #if !defined(SDC_MMC_SUPPORT) || defined(__DOXYGEN__)}\par
267 {\cf21 #define SDC_MMC_SUPPORT             FALSE}\par
268 {\cf21 #endif}\par
269 \par
276 {\cf21 #if !defined(SDC_NICE_WAITING) || defined(__DOXYGEN__)}\par
277 {\cf21 #define SDC_NICE_WAITING            TRUE}\par
278 {\cf21 #endif}\par
279 \par
280 {\cf20 /*===========================================================================*/}\par
281 {\cf20 /* SERIAL driver related settings.                                           */}\par
282 {\cf20 /*===========================================================================*/}\par
283 \par
289 {\cf21 #if !defined(SERIAL_DEFAULT_BITRATE) || defined(__DOXYGEN__)}\par
290 {\cf21 #define SERIAL_DEFAULT_BITRATE      115200}\par
291 {\cf21 #endif}\par
292 \par
300 {\cf21 #if !defined(SERIAL_BUFFERS_SIZE) || defined(__DOXYGEN__)}\par
301 {\cf21 #define SERIAL_BUFFERS_SIZE         16}\par
302 {\cf21 #endif}\par
303 \par
304 {\cf20 /*===========================================================================*/}\par
305 {\cf20 /* SERIAL_USB driver related setting.                                        */}\par
306 {\cf20 /*===========================================================================*/}\par
307 \par
315 {\cf21 #if !defined(SERIAL_USB_BUFFERS_SIZE) || defined(__DOXYGEN__)}\par
316 {\cf21 #define SERIAL_USB_BUFFERS_SIZE     256}\par
317 {\cf21 #endif}\par
318 \par
319 {\cf20 /*===========================================================================*/}\par
320 {\cf20 /* SPI driver related settings.                                              */}\par
321 {\cf20 /*===========================================================================*/}\par
322 \par
327 {\cf21 #if !defined(SPI_USE_WAIT) || defined(__DOXYGEN__)}\par
328 {\cf21 #define SPI_USE_WAIT                TRUE}\par
329 {\cf21 #endif}\par
330 \par
335 {\cf21 #if !defined(SPI_USE_MUTUAL_EXCLUSION) || defined(__DOXYGEN__)}\par
336 {\cf21 #define SPI_USE_MUTUAL_EXCLUSION    TRUE}\par
337 {\cf21 #endif}\par
338 \par
339 {\cf21 #endif }{\cf20 /* _HALCONF_H_ */}{\cf21 }\par
340 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lightshow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        lightshow.h}\par
3 {\cf20  * @brief       Led's pattern control library.}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @author      Joaquim Silveira}\par
6 {\cf20  * @version     1.0}\par
7 {\cf20  * @date        18 Apr 2022}\par
8 {\cf20  * @copyright   GNU Public License}\par
9 {\cf20  *}\par
10 {\cf20  */}\par
11 {\cf21 #ifndef LIGHTSHOW_H}\par
12 {\cf21 #define LIGHTSHOW_H}\par
13 \par
14 {\cf18 void} lightshow_init({\cf18 void});\par
15 {\cf18 void} lighshow_stop({\cf18 void});\par
16 \par
17 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mcuconf.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     ChibiOS - Copyright (C) 2006..2015 Giovanni Di Sirio}\par
3 {\cf20 }\par
4 {\cf20     Licensed under the Apache License, Version 2.0 (the "License");}\par
5 {\cf20     you may not use this file except in compliance with the License.}\par
6 {\cf20     You may obtain a copy of the License at}\par
7 {\cf20 }\par
8 {\cf20         http://www.apache.org/licenses/LICENSE-2.0}\par
9 {\cf20 }\par
10 {\cf20     Unless required by applicable law or agreed to in writing, software}\par
11 {\cf20     distributed under the License is distributed on an "AS IS" BASIS,}\par
12 {\cf20     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.}\par
13 {\cf20     See the License for the specific language governing permissions and}\par
14 {\cf20     limitations under the License.}\par
15 {\cf20  */}\par
16 \par
17 {\cf21 #ifndef _MCUCONF_H_}\par
18 {\cf21 #define _MCUCONF_H_}\par
19 \par
20 {\cf20 /*}\par
21 {\cf20  * STM32F4xx drivers configuration.}\par
22 {\cf20  * The following settings override the default settings present in}\par
23 {\cf20  * the various device driver implementation headers.}\par
24 {\cf20  * Note that the settings for each driver only have effect if the whole}\par
25 {\cf20  * driver is enabled in halconf.h.}\par
26 {\cf20  *}\par
27 {\cf20  * IRQ priorities:}\par
28 {\cf20  * 15...0       Lowest...Highest.}\par
29 {\cf20  *}\par
30 {\cf20  * DMA priorities:}\par
31 {\cf20  * 0...3        Lowest...Highest.}\par
32 {\cf20  */}\par
33 \par
34 {\cf21 #define STM32F4xx_MCUCONF}\par
35 \par
36 {\cf20 /*}\par
37 {\cf20  * HAL driver system settings.}\par
38 {\cf20  */}\par
39 {\cf21 #define STM32_NO_INIT                       FALSE}\par
40 {\cf21 #define STM32_HSI_ENABLED                   TRUE}\par
41 {\cf21 #define STM32_LSI_ENABLED                   TRUE}\par
42 {\cf21 #define STM32_HSE_ENABLED                   TRUE}\par
43 {\cf21 #define STM32_LSE_ENABLED                   FALSE}\par
44 {\cf21 #define STM32_CLOCK48_REQUIRED              TRUE}\par
45 {\cf21 #define STM32_SW                            STM32_SW_PLL }{\cf20 // SYSCLK source is PLL.}\par
46 {\cf21 #define STM32_PLLSRC                        STM32_PLLSRC_HSE }{\cf20 // 24 MHz.}\par
47 {\cf21 #define STM32_PLLM_VALUE                    24 }{\cf20 // VCO input freq = 8/PLLM = 1 MHz // (define STM32_SYSCLK)}\par
48 {\cf21 #define STM32_PLLN_VALUE                    336 }{\cf20 // VCO output freq = VCO input * PLLN = 336 MHz}\par
49 {\cf21 #define STM32_PLLP_VALUE                    2 }{\cf20 // Main PLL clock = VCO output / PLLP = 336/2 = 168 MHz}\par
50 {\cf21 #define STM32_PLLQ_VALUE                    7 }{\cf20 // USB, SDIO clock = VCO outpu / PLLQ = 48 MHz}\par
51 {\cf21 #define STM32_HPRE                          STM32_HPRE_DIV1     }{\cf20 // AHB prescaler => 168 MHz. (define STM32_HCLK)}\par
52 {\cf21 #define STM32_PPRE1                         STM32_PPRE1_DIV4    }{\cf20 // APB1 prescaler => 168/4 = 42 MHz. (define STM32_PCLK1)}\par
53 {\cf21 #define STM32_PPRE2                         STM32_PPRE2_DIV2    }{\cf20 // APB2 prescaler => 168/2 = 84 MHz. (define STM32_PCLK2)}\par
54 {\cf21 #define STM32_RTCSEL                        STM32_RTCSEL_LSI}\par
55 {\cf21 #define STM32_RTCPRE_VALUE                  8}\par
56 {\cf21 #define STM32_MCO1SEL                       STM32_MCO1SEL_HSI}\par
57 {\cf21 #define STM32_MCO1PRE                       STM32_MCO1PRE_DIV1}\par
58 {\cf21 #define STM32_MCO2SEL                       STM32_MCO2SEL_SYSCLK}\par
59 {\cf21 #define STM32_MCO2PRE                       STM32_MCO2PRE_DIV5}\par
60 {\cf21 #define STM32_I2SSRC                        STM32_I2SSRC_PLLI2S}\par
61 {\cf21 #define STM32_PLLI2SN_VALUE                 192}\par
62 {\cf21 #define STM32_PLLI2SR_VALUE                 6 }{\cf20 // PLLI2SCLK = VCO input * PLLI2SN / PLLI2SR = 1*192/6 = 32 MHz}\par
63 {\cf21 #define STM32_PVD_ENABLE                    FALSE}\par
64 {\cf21 #define STM32_PLS                           STM32_PLS_LEV0}\par
65 {\cf21 #define STM32_BKPRAM_ENABLE                 FALSE}\par
66 \par
67 {\cf20 /*}\par
68 {\cf20  * ADC driver system settings.}\par
69 {\cf20  */}\par
70 {\cf21 #define STM32_ADC_ADCPRE                    ADC_CCR_ADCPRE_DIV8}\par
71 {\cf21 #define STM32_ADC_USE_ADC1                  TRUE}\par
72 {\cf21 #define STM32_ADC_USE_ADC2                  TRUE}\par
73 {\cf21 #define STM32_ADC_USE_ADC3                  TRUE}\par
74 {\cf21 #define STM32_ADC_ADC1_DMA_STREAM           STM32_DMA_STREAM_ID(2, 4)}\par
75 {\cf21 #define STM32_ADC_ADC2_DMA_STREAM           STM32_DMA_STREAM_ID(2, 2)}\par
76 {\cf21 #define STM32_ADC_ADC3_DMA_STREAM           STM32_DMA_STREAM_ID(2, 1)}\par
77 {\cf21 #define STM32_ADC_ADC1_DMA_PRIORITY         2}\par
78 {\cf21 #define STM32_ADC_ADC2_DMA_PRIORITY         2}\par
79 {\cf21 #define STM32_ADC_ADC3_DMA_PRIORITY         2}\par
80 {\cf21 #define STM32_ADC_IRQ_PRIORITY              6}\par
81 {\cf21 #define STM32_ADC_ADC1_DMA_IRQ_PRIORITY     6}\par
82 {\cf21 #define STM32_ADC_ADC2_DMA_IRQ_PRIORITY     6}\par
83 {\cf21 #define STM32_ADC_ADC3_DMA_IRQ_PRIORITY     6}\par
84 \par
85 {\cf20 /*}\par
86 {\cf20  * DAC driver system settings.}\par
87 {\cf20  */}\par
88 {\cf21 #define STM32_DAC_DUAL_MODE                 FALSE}\par
89 {\cf21 #define STM32_DAC_USE_DAC1_CH1              FALSE}\par
90 {\cf21 #define STM32_DAC_USE_DAC1_CH2              TRUE}\par
91 {\cf21 #define STM32_DAC_DAC1_CH1_IRQ_PRIORITY     10}\par
92 {\cf21 #define STM32_DAC_DAC1_CH2_IRQ_PRIORITY     10}\par
93 {\cf21 #define STM32_DAC_DAC1_CH1_DMA_PRIORITY     2}\par
94 {\cf21 #define STM32_DAC_DAC1_CH2_DMA_PRIORITY     2}\par
95 {\cf21 #define STM32_DAC_DAC1_CH1_DMA_STREAM       STM32_DMA_STREAM_ID(1, 5)}\par
96 {\cf21 #define STM32_DAC_DAC1_CH2_DMA_STREAM       STM32_DMA_STREAM_ID(1, 6)}\par
97 \par
98 {\cf20 /*}\par
99 {\cf20  * CAN driver system settings.}\par
100 {\cf20  */}\par
101 {\cf21 #define STM32_CAN_USE_CAN1                  TRUE}\par
102 {\cf21 #define STM32_CAN_USE_CAN2                  FALSE}\par
103 {\cf21 #define STM32_CAN_CAN1_IRQ_PRIORITY         11}\par
104 {\cf21 #define STM32_CAN_CAN2_IRQ_PRIORITY         11}\par
105 \par
106 {\cf20 /*}\par
107 {\cf20  * DCMI driver system settings.}\par
108 {\cf20  */}\par
109 {\cf21 #define STM32_DCMI_USE_DCMI                 TRUE}\par
110 {\cf21 #define STM32_DCMI_IRQ_PRIORITY             11}\par
111 {\cf21 #define STM32_DCMI_DMA_PRIORITY             2}\par
112 {\cf21 #define STM32_DCMI_DMA_IRQ_PRIORITY         12}\par
113 {\cf21 #define STM32_DCMI_DMA_STREAM               STM32_DMA_STREAM_ID(2, 1)}\par
114 \par
115 {\cf20 /*}\par
116 {\cf20  * EXT driver system settings.}\par
117 {\cf20  */}\par
118 {\cf21 #define STM32_EXT_EXTI0_IRQ_PRIORITY        6}\par
119 {\cf21 #define STM32_EXT_EXTI1_IRQ_PRIORITY        6}\par
120 {\cf21 #define STM32_EXT_EXTI2_IRQ_PRIORITY        6}\par
121 {\cf21 #define STM32_EXT_EXTI3_IRQ_PRIORITY        6}\par
122 {\cf21 #define STM32_EXT_EXTI4_IRQ_PRIORITY        6}\par
123 {\cf21 #define STM32_EXT_EXTI5_9_IRQ_PRIORITY      6}\par
124 {\cf21 #define STM32_EXT_EXTI10_15_IRQ_PRIORITY    6}\par
125 {\cf21 #define STM32_EXT_EXTI16_IRQ_PRIORITY       6}\par
126 {\cf21 #define STM32_EXT_EXTI17_IRQ_PRIORITY       15}\par
127 {\cf21 #define STM32_EXT_EXTI18_IRQ_PRIORITY       6}\par
128 {\cf21 #define STM32_EXT_EXTI19_IRQ_PRIORITY       6}\par
129 {\cf21 #define STM32_EXT_EXTI20_IRQ_PRIORITY       6}\par
130 {\cf21 #define STM32_EXT_EXTI21_IRQ_PRIORITY       15}\par
131 {\cf21 #define STM32_EXT_EXTI22_IRQ_PRIORITY       15}\par
132 \par
133 {\cf20 /*}\par
134 {\cf20  * GPT driver system settings.}\par
135 {\cf20  */}\par
136 {\cf21 #define STM32_GPT_USE_TIM1                  FALSE}\par
137 {\cf21 #define STM32_GPT_USE_TIM2                  FALSE}\par
138 {\cf21 #define STM32_GPT_USE_TIM3                  FALSE}\par
139 {\cf21 #define STM32_GPT_USE_TIM4                  FALSE}\par
140 {\cf21 #define STM32_GPT_USE_TIM5                  FALSE}\par
141 {\cf21 #define STM32_GPT_USE_TIM6                  TRUE}\par
142 {\cf21 #define STM32_GPT_USE_TIM7                  FALSE}\par
143 {\cf21 #define STM32_GPT_USE_TIM8                  FALSE}\par
144 {\cf21 #define STM32_GPT_USE_TIM9                  FALSE}\par
145 {\cf21 #define STM32_GPT_USE_TIM11                 TRUE}\par
146 {\cf21 #define STM32_GPT_USE_TIM12                 TRUE}\par
147 {\cf21 #define STM32_GPT_USE_TIM14                 FALSE}\par
148 {\cf21 #define STM32_GPT_TIM1_IRQ_PRIORITY         7}\par
149 {\cf21 #define STM32_GPT_TIM2_IRQ_PRIORITY         7}\par
150 {\cf21 #define STM32_GPT_TIM3_IRQ_PRIORITY         7}\par
151 {\cf21 #define STM32_GPT_TIM4_IRQ_PRIORITY         7}\par
152 {\cf21 #define STM32_GPT_TIM5_IRQ_PRIORITY         7}\par
153 {\cf21 #define STM32_GPT_TIM6_IRQ_PRIORITY         7}\par
154 {\cf21 #define STM32_GPT_TIM7_IRQ_PRIORITY         7}\par
155 {\cf21 #define STM32_GPT_TIM8_IRQ_PRIORITY         7}\par
156 {\cf21 #define STM32_GPT_TIM9_IRQ_PRIORITY         7}\par
157 {\cf21 #define STM32_GPT_TIM11_IRQ_PRIORITY        7}\par
158 {\cf21 #define STM32_GPT_TIM12_IRQ_PRIORITY        7}\par
159 {\cf21 #define STM32_GPT_TIM14_IRQ_PRIORITY        7}\par
160 \par
161 {\cf20 /*}\par
162 {\cf20  * I2C driver system settings.}\par
163 {\cf20  */}\par
164 {\cf21 #define STM32_I2C_USE_I2C1                  TRUE}\par
165 {\cf21 #define STM32_I2C_USE_I2C2                  FALSE}\par
166 {\cf21 #define STM32_I2C_USE_I2C3                  FALSE}\par
167 {\cf21 #define STM32_I2C_BUSY_TIMEOUT              50}\par
168 {\cf21 #define STM32_I2C_I2C1_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 0)}\par
169 {\cf21 #define STM32_I2C_I2C1_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 7)}\par
170 {\cf21 #define STM32_I2C_I2C2_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 2)}\par
171 {\cf21 #define STM32_I2C_I2C2_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 7)}\par
172 {\cf21 #define STM32_I2C_I2C3_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 2)}\par
173 {\cf21 #define STM32_I2C_I2C3_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 4)}\par
174 {\cf21 #define STM32_I2C_I2C1_IRQ_PRIORITY         5}\par
175 {\cf21 #define STM32_I2C_I2C2_IRQ_PRIORITY         5}\par
176 {\cf21 #define STM32_I2C_I2C3_IRQ_PRIORITY         5}\par
177 {\cf21 #define STM32_I2C_I2C1_DMA_PRIORITY         3}\par
178 {\cf21 #define STM32_I2C_I2C2_DMA_PRIORITY         3}\par
179 {\cf21 #define STM32_I2C_I2C3_DMA_PRIORITY         3}\par
180 {\cf21 #define STM32_I2C_DMA_ERROR_HOOK(i2cp)      osalSysHalt("DMA failure"})\par
181 \par
182 {\cf20 /*}\par
183 {\cf20  * ICU driver system settings.}\par
184 {\cf20  */}\par
185 {\cf21 #define STM32_ICU_USE_TIM1                  FALSE}\par
186 {\cf21 #define STM32_ICU_USE_TIM2                  FALSE}\par
187 {\cf21 #define STM32_ICU_USE_TIM3                  FALSE}\par
188 {\cf21 #define STM32_ICU_USE_TIM4                  FALSE}\par
189 {\cf21 #define STM32_ICU_USE_TIM5                  FALSE}\par
190 {\cf21 #define STM32_ICU_USE_TIM8                  FALSE}\par
191 {\cf21 #define STM32_ICU_USE_TIM9                  FALSE}\par
192 {\cf21 #define STM32_ICU_TIM1_IRQ_PRIORITY         7}\par
193 {\cf21 #define STM32_ICU_TIM2_IRQ_PRIORITY         7}\par
194 {\cf21 #define STM32_ICU_TIM3_IRQ_PRIORITY         7}\par
195 {\cf21 #define STM32_ICU_TIM4_IRQ_PRIORITY         7}\par
196 {\cf21 #define STM32_ICU_TIM5_IRQ_PRIORITY         7}\par
197 {\cf21 #define STM32_ICU_TIM8_IRQ_PRIORITY         7}\par
198 {\cf21 #define STM32_ICU_TIM9_IRQ_PRIORITY         7}\par
199 \par
200 {\cf20 /*}\par
201 {\cf20  * MAC driver system settings.}\par
202 {\cf20  */}\par
203 {\cf21 #define STM32_MAC_TRANSMIT_BUFFERS          2}\par
204 {\cf21 #define STM32_MAC_RECEIVE_BUFFERS           4}\par
205 {\cf21 #define STM32_MAC_BUFFERS_SIZE              1522}\par
206 {\cf21 #define STM32_MAC_PHY_TIMEOUT               100}\par
207 {\cf21 #define STM32_MAC_ETH1_CHANGE_PHY_STATE     TRUE}\par
208 {\cf21 #define STM32_MAC_ETH1_IRQ_PRIORITY         13}\par
209 {\cf21 #define STM32_MAC_IP_CHECKSUM_OFFLOAD       0}\par
210 \par
211 {\cf20 /*}\par
212 {\cf20  * PWM driver system settings.}\par
213 {\cf20  */}\par
214 {\cf21 #define STM32_PWM_USE_ADVANCED              FALSE}\par
215 {\cf21 #define STM32_PWM_USE_TIM1                  FALSE}\par
216 {\cf21 #define STM32_PWM_USE_TIM2                  TRUE}\par
217 {\cf21 #define STM32_PWM_USE_TIM3                  TRUE}\par
218 {\cf21 #define STM32_PWM_USE_TIM4                  TRUE}\par
219 {\cf21 #define STM32_PWM_USE_TIM5                  TRUE}\par
220 {\cf21 #define STM32_PWM_USE_TIM8                  FALSE}\par
221 {\cf21 #define STM32_PWM_USE_TIM9                  FALSE}\par
222 {\cf21 #define STM32_PWM_TIM1_IRQ_PRIORITY         7}\par
223 {\cf21 #define STM32_PWM_TIM2_IRQ_PRIORITY         7}\par
224 {\cf21 #define STM32_PWM_TIM3_IRQ_PRIORITY         7}\par
225 {\cf21 #define STM32_PWM_TIM4_IRQ_PRIORITY         7}\par
226 {\cf21 #define STM32_PWM_TIM5_IRQ_PRIORITY         7}\par
227 {\cf21 #define STM32_PWM_TIM8_IRQ_PRIORITY         7}\par
228 {\cf21 #define STM32_PWM_TIM9_IRQ_PRIORITY         7}\par
229 \par
230 {\cf20 /*}\par
231 {\cf20  * SDC driver system settings.}\par
232 {\cf20  */}\par
233 {\cf21 #define STM32_SDC_SDIO_DMA_PRIORITY         3}\par
234 {\cf21 #define STM32_SDC_SDIO_IRQ_PRIORITY         9}\par
235 {\cf21 #define STM32_SDC_WRITE_TIMEOUT_MS          250}\par
236 {\cf21 #define STM32_SDC_READ_TIMEOUT_MS           25}\par
237 {\cf21 #define STM32_SDC_CLOCK_ACTIVATION_DELAY    10}\par
238 {\cf21 #define STM32_SDC_SDIO_UNALIGNED_SUPPORT    TRUE}\par
239 {\cf21 #define STM32_SDC_SDIO_DMA_STREAM           STM32_DMA_STREAM_ID(2, 3)}\par
240 \par
241 {\cf20 /*}\par
242 {\cf20  * SERIAL driver system settings.}\par
243 {\cf20  */}\par
244 {\cf21 #define STM32_SERIAL_USE_USART1             FALSE}\par
245 {\cf21 #define STM32_SERIAL_USE_USART2             FALSE}\par
246 {\cf21 #define STM32_SERIAL_USE_USART3             TRUE}\par
247 {\cf21 #define STM32_SERIAL_USE_UART4              FALSE}\par
248 {\cf21 #define STM32_SERIAL_USE_UART5              FALSE}\par
249 {\cf21 #define STM32_SERIAL_USE_USART6             FALSE}\par
250 {\cf21 #define STM32_SERIAL_USART1_PRIORITY        12}\par
251 {\cf21 #define STM32_SERIAL_USART2_PRIORITY        12}\par
252 {\cf21 #define STM32_SERIAL_USART3_PRIORITY        12}\par
253 {\cf21 #define STM32_SERIAL_UART4_PRIORITY         12}\par
254 {\cf21 #define STM32_SERIAL_UART5_PRIORITY         12}\par
255 {\cf21 #define STM32_SERIAL_USART6_PRIORITY        12}\par
256 \par
257 {\cf20 /*}\par
258 {\cf20  * SPI driver system settings.}\par
259 {\cf20  */}\par
260 {\cf21 #define STM32_SPI_USE_SPI1                  TRUE}\par
261 {\cf21 #define STM32_SPI_USE_SPI2                  FALSE}\par
262 {\cf21 #define STM32_SPI_USE_SPI3                  FALSE}\par
263 {\cf21 #define STM32_SPI_SPI1_RX_DMA_STREAM        STM32_DMA_STREAM_ID(2, 0)}\par
264 {\cf21 #define STM32_SPI_SPI1_TX_DMA_STREAM        STM32_DMA_STREAM_ID(2, 5)}\par
265 {\cf21 #define STM32_SPI_SPI2_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 3)}\par
266 {\cf21 #define STM32_SPI_SPI2_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 4)}\par
267 {\cf21 #define STM32_SPI_SPI3_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 2)}\par
268 {\cf21 #define STM32_SPI_SPI3_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 5)}\par
269 {\cf21 #define STM32_SPI_SPI1_DMA_PRIORITY         1}\par
270 {\cf21 #define STM32_SPI_SPI2_DMA_PRIORITY         1}\par
271 {\cf21 #define STM32_SPI_SPI3_DMA_PRIORITY         1}\par
272 {\cf21 #define STM32_SPI_SPI1_IRQ_PRIORITY         10}\par
273 {\cf21 #define STM32_SPI_SPI2_IRQ_PRIORITY         10}\par
274 {\cf21 #define STM32_SPI_SPI3_IRQ_PRIORITY         10}\par
275 {\cf21 #define STM32_SPI_DMA_ERROR_HOOK(spip)      osalSysHalt("DMA failure"})\par
276 \par
277 {\cf20 /*}\par
278 {\cf20  * ST driver system settings.}\par
279 {\cf20  */}\par
280 {\cf21 #define STM32_ST_IRQ_PRIORITY               8}\par
281 {\cf21 #define STM32_ST_USE_TIMER                  2}\par
282 \par
283 {\cf20 /*}\par
284 {\cf20  * UART driver system settings.}\par
285 {\cf20  */}\par
286 {\cf21 #define STM32_UART_USE_USART1               FALSE}\par
287 {\cf21 #define STM32_UART_USE_USART2               FALSE}\par
288 {\cf21 #define STM32_UART_USE_USART3               FALSE}\par
289 {\cf21 #define STM32_UART_USE_UART4                FALSE}\par
290 {\cf21 #define STM32_UART_USE_UART5                FALSE}\par
291 {\cf21 #define STM32_UART_USE_USART6               FALSE}\par
292 {\cf21 #define STM32_UART_USART1_RX_DMA_STREAM     STM32_DMA_STREAM_ID(2, 5)}\par
293 {\cf21 #define STM32_UART_USART1_TX_DMA_STREAM     STM32_DMA_STREAM_ID(2, 7)}\par
294 {\cf21 #define STM32_UART_USART2_RX_DMA_STREAM     STM32_DMA_STREAM_ID(1, 5)}\par
295 {\cf21 #define STM32_UART_USART2_TX_DMA_STREAM     STM32_DMA_STREAM_ID(1, 6)}\par
296 {\cf21 #define STM32_UART_USART3_RX_DMA_STREAM     STM32_DMA_STREAM_ID(1, 1)}\par
297 {\cf21 #define STM32_UART_USART3_TX_DMA_STREAM     STM32_DMA_STREAM_ID(1, 3)}\par
298 {\cf21 #define STM32_UART_UART4_RX_DMA_STREAM      STM32_DMA_STREAM_ID(1, 2)}\par
299 {\cf21 #define STM32_UART_UART4_TX_DMA_STREAM      STM32_DMA_STREAM_ID(1, 4)}\par
300 {\cf21 #define STM32_UART_UART5_RX_DMA_STREAM      STM32_DMA_STREAM_ID(1, 0)}\par
301 {\cf21 #define STM32_UART_UART5_TX_DMA_STREAM      STM32_DMA_STREAM_ID(1, 7)}\par
302 {\cf21 #define STM32_UART_USART6_RX_DMA_STREAM     STM32_DMA_STREAM_ID(2, 2)}\par
303 {\cf21 #define STM32_UART_USART6_TX_DMA_STREAM     STM32_DMA_STREAM_ID(2, 7)}\par
304 {\cf21 #define STM32_UART_USART1_IRQ_PRIORITY      12}\par
305 {\cf21 #define STM32_UART_USART2_IRQ_PRIORITY      12}\par
306 {\cf21 #define STM32_UART_USART3_IRQ_PRIORITY      12}\par
307 {\cf21 #define STM32_UART_UART4_IRQ_PRIORITY       12}\par
308 {\cf21 #define STM32_UART_UART5_IRQ_PRIORITY       12}\par
309 {\cf21 #define STM32_UART_USART6_IRQ_PRIORITY      12}\par
310 {\cf21 #define STM32_UART_USART1_DMA_PRIORITY      0}\par
311 {\cf21 #define STM32_UART_USART2_DMA_PRIORITY      0}\par
312 {\cf21 #define STM32_UART_USART3_DMA_PRIORITY      0}\par
313 {\cf21 #define STM32_UART_UART4_DMA_PRIORITY       0}\par
314 {\cf21 #define STM32_UART_UART5_DMA_PRIORITY       0}\par
315 {\cf21 #define STM32_UART_USART6_DMA_PRIORITY      0}\par
316 {\cf21 #define STM32_UART_DMA_ERROR_HOOK(uartp)    osalSysHalt("DMA failure"})\par
317 \par
318 {\cf20 /*}\par
319 {\cf20  * USB driver system settings.}\par
320 {\cf20  */}\par
321 {\cf21 #define STM32_USB_USE_OTG1                  TRUE}\par
322 {\cf21 #define STM32_USB_USE_OTG2                  FALSE}\par
323 {\cf21 #define STM32_USB_OTG1_IRQ_PRIORITY         14}\par
324 {\cf21 #define STM32_USB_OTG2_IRQ_PRIORITY         14}\par
325 {\cf21 #define STM32_USB_OTG1_RX_FIFO_SIZE         512}\par
326 {\cf21 #define STM32_USB_OTG2_RX_FIFO_SIZE         1024}\par
327 {\cf21 #define STM32_USB_OTG_THREAD_PRIO           NORMALPRIO+10}\par
328 {\cf21 #define STM32_USB_OTG_THREAD_STACK_SIZE     128}\par
329 {\cf21 #define STM32_USB_OTGFIFO_FILL_BASEPRI      0}\par
330 \par
331 {\cf20 /*}\par
332 {\cf20  * I2S driver system settings.}\par
333 {\cf20  */}\par
334 {\cf21 #define STM32_I2S_USE_SPI2                  TRUE}\par
335 {\cf21 #define STM32_I2S_USE_SPI3                  FALSE}\par
336 {\cf21 #define STM32_I2S_SPI2_IRQ_PRIORITY         10}\par
337 {\cf21 #define STM32_I2S_SPI3_IRQ_PRIORITY         10}\par
338 {\cf21 #define STM32_I2S_SPI2_DMA_PRIORITY         1}\par
339 {\cf21 #define STM32_I2S_SPI3_DMA_PRIORITY         1}\par
340 {\cf21 #define STM32_I2S_SPI2_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 3)}\par
341 {\cf21 #define STM32_I2S_SPI2_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 4)}\par
342 {\cf21 #define STM32_I2S_SPI3_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 2)}\par
343 {\cf21 #define STM32_I2S_SPI3_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 5)}\par
344 {\cf21 #define STM32_I2S_DMA_ERROR_HOOK(i2sp)      osalSysHalt("DMA failure"})\par
345 {\cf21 #define STM32_I2S_SPI2_MODE                 (STM32_I2S_MODE_MASTER | STM32_I2S_MODE_RX)}\par
346 {\cf21 #define STM32_I2S_SPI3_MODE                 (STM32_I2S_MODE_SLAVE | STM32_I2S_MODE_RX)}\par
347 \par
348 {\cf20 /*}\par
349 {\cf20  * SPI slave driver system settings.}\par
350 {\cf20  */}\par
351 {\cf21 #define STM32_SPI_USE_SPI3_SLAVE            TRUE}\par
352 {\cf21 #define STM32_SPI_SPI3_SLAVE_RX_DMA_STREAM  STM32_DMA_STREAM_ID(1, 2)}\par
353 {\cf21 #define STM32_SPI_SPI3_SLAVE_TX_DMA_STREAM  STM32_DMA_STREAM_ID(1, 5)}\par
354 {\cf21 #define STM32_SPI_SPI3_SLAVE_DMA_PRIORITY   1}\par
355 {\cf21 #define STM32_SPI_SPI3_SLAVE_IRQ_PRIORITY   10}\par
356 {\cf21 #define STM32_SPI_SLAVE_DMA_ERROR_HOOK(spip) osalSysHalt("DMA failure"})\par
357 \par
358 {\cf21 #endif }{\cf20 /* _MCUCONF_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
music.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        music.h}\par
3 {\cf20  * @brief       Musical processing of the frequency data.}\par
4 {\cf20  * @author      Karl Khalil}\par
5 {\cf20  * @author      Joaquim Silveira}\par
6 {\cf20  * @version     1.0}\par
7 {\cf20  * @date        20 Apr 2022}\par
8 {\cf20  * @copyright   GNU Public License}\par
9 {\cf20  *}\par
10 {\cf20  */}\par
11 \par
12 {\cf21 #ifndef MUSIC_H}\par
13 {\cf21 #define MUSIC_H}\par
14 \par
15 \par
16 {\cf18 void} music_init({\cf18 void});\par
17 {\cf18 void} music_stop({\cf18 void});\par
18 {\cf18 void} play_song({\cf18 void});\par
19 {\cf18 void} stop_song({\cf18 void});\par
20 {\cf18 void} music_listen({\cf18 void});\par
21 msg_t music_send_freq({\cf18 float} freq);\par
22 {\cf18 bool} music_is_playing({\cf18 void});\par
23 \par
24 \par
25 {\cf21 #endif }{\cf20 /*MUSIC_H*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pathing.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        pathing.h}\par
3 {\cf20  * @brief       Pathing library for positional control of the ePuck}\par
4 {\cf20  * @author      Joaquim Silveira}\par
5 {\cf20  * @version     1.0}\par
6 {\cf20  * @date        18 Apr 2022}\par
7 {\cf20  * @copyright   GNU Public License}\par
8 {\cf20  *}\par
9 {\cf20  */}\par
10 \par
11 {\cf21 #ifndef     PATHING_H_}\par
12 {\cf21 #define     PATHING_H_}\par
13 \par
14 {\cf17 typedef} {\cf17 enum}\{\par
15     PATH_TO_PLAYER1,\par
16     PATH_TO_PLAYER2,\par
17     PATHING,\par
18     PATHING_FINISHED\par
19 \}pathing_option_t;\par
20 \par
21 {\cf18 void} pathing_init(pathing_option_t option);\par
22 {\cf18 void} pathing_stop({\cf18 void});\par
23 {\cf18 void} pathing_set(pathing_option_t option);\par
24 {\cf18 void} pathing_wait_finish({\cf18 void});\par
25 \par
26 {\cf21 #endif  }{\cf20 /* PATHING_H_ */}{\cf21 }\par
27 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
photo.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        pathing.h}\par
3 {\cf20  * @brief       Photo capture library}\par
4 {\cf20  * @author      Joaquim Silveira}\par
5 {\cf20  * @version     1.0}\par
6 {\cf20  * @date        23 Apr 2022}\par
7 {\cf20  * @copyright   GNU Public License}\par
8 {\cf20  *}\par
9 {\cf20  */}\par
10 \par
11 {\cf21 #ifndef     PHOTO_H}\par
12 {\cf21 #define     PHOTO_H}\par
13 \par
14 {\cf18 void} photo_init({\cf18 void});\par
15 {\cf18 void} photo_wait_finish({\cf18 void});\par
16 {\cf18 void} photo_stop({\cf18 void});\par
17 \par
18 {\cf21 #endif }{\cf20 /* PHOTO_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rng.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * @file        rng.h}\par
3 {\cf20  * @brief       Random Number Generator Library}\par
4 {\cf20  * @author      Joaquim Silveira}\par
5 {\cf20  * @version     1.0}\par
6 {\cf20  * @date        1 May 2022}\par
7 {\cf20  * @copyright   GNU Public License}\par
8 {\cf20  *}\par
9 {\cf20  */}\par
10 \par
11 {\cf21 #ifndef     RNG_H_}\par
12 {\cf21 #define     RNG_H_}\par
13 \par
14 {\cf18 void} rng_stop({\cf18 void});\par
15 {\cf18 void} rng_init({\cf18 void});\par
16 uint32_t rng_get({\cf18 void});\par
17 \par
18 {\cf21 #endif }{\cf20 /* RNG_H_*/}{\cf21 }\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
